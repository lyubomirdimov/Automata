#  Regular Expression pda

alphabet: ab%().|*
stack: p()%
states: q0,q1,q2,q3,q4,q5
final: q1,q5

dfa: n
finite: n

transitions: 
q0,_ [_,p] --> q1
q1,a [p,_] --> q1
q1,b [p,_] --> q1
q1,_ [p,p] --> q2
q2,. [p,)p%p(] --> q3
q2,| [p,)p%p(] --> q3
q2,* [p,)p(] --> q4
q3,_ [_,_] --> q5
q4,_ [_,_] --> q5
q5,a [p,_] --> q5
q5,b [p,_] --> q5
q5,( [(,_] --> q5
q5,) [),_] --> q5
q5,% [%,_] --> q5	
q5,_ [p,p] --> q2
end.

words:
a,y
,n
.(a%b),y
|(b%b),y
(b),n
|(b%*(a)),y
.(a%.(*(a)%|(b%b))),y
.(a%.(*(a)%|(b%b)),n
end.